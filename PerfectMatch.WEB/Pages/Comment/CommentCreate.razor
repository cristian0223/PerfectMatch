@page "/comment/create"
@using PerfectMatch.Shared.Entities;
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService

<h3>Crear Comentario</h3>

<CommentForm @ref="CommentForm" Comment="Comment" OnValidSubmit="Create" ReturnAction="Return" />

@code {
    private Comment Comment = new();

    private CommentForm? CommentForm;

    private async Task Create()
    {
        var responseHttp = await repository.Post("/api/comment", Comment);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessage();
            await sweetAlertService.FireAsync("Error", message);
            return;
        }
        else
        {

            CommentForm!.FormPostedSuccessfully = true;
            navigationManager.NavigateTo("/comment");

        }
    }

    private void Return()
    {
        navigationManager.NavigateTo("/comment");
    }
}
